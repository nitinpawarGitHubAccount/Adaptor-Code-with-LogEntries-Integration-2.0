#region Copyright
//
// All rights are reserved. Reproduction or transmission in whole or in part, in
// any form or by any means, electronic, mechanical or otherwise, is prohibited
// without the prior written consent of the copyright owner.
//
#endregion

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.InteropServices;
using System.Web.Services;
using System.Web.Services.Description;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace Avalara.AvaTax.Adapter.Proxies.TaxSvcProxy 
{
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxSvc/*' />
	[DebuggerStepThrough()]
	[DesignerCategory("code")]
	[WebServiceBinding(Name="TaxSvcSoap", Namespace="http://avatax.avalara.com/services")]
	[XmlInclude(typeof(ProxyBaseResult))]
	[ComVisible(false)]
	public class ProxyTaxSvc : SoapHttpClientProtocol 
	{
		/// <remarks/>
		public ProxySecurity Security;
		/// <remarks/>
		public ProxyProfile ProfileValue;
 
		/// <remarks/>
		internal ProxyTaxSvc() 
		{
			//not publicly creatable
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/GetTax", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyGetTaxResult GetTax(ProxyGetTaxRequest GetTaxRequest) 
		{
			AvaLogger _avaLog = AvaLogger.GetLogger();
			Perf monitor = new Perf();
			monitor.Start();

			object[] results = this.Invoke("GetTax", new object[] {
																	  GetTaxRequest});

			monitor.Stop();
			_avaLog.Debug("GetTax (webservice method): " + monitor.ElapsedSeconds(3).ToString());

			return ((ProxyGetTaxResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginGetTax(ProxyGetTaxRequest GetTaxRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetTax", new object[] {
															   GetTaxRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyGetTaxResult EndGetTax(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyGetTaxResult)(results[0]));
		}

       
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/GetTaxHistory", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyGetTaxHistoryResult GetTaxHistory(ProxyGetTaxHistoryRequest GetTaxHistoryRequest) 
		{
			object[] results = this.Invoke("GetTaxHistory", new object[] {
																			 GetTaxHistoryRequest});
			return ((ProxyGetTaxHistoryResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginGetTaxHistory(ProxyGetTaxHistoryRequest GetTaxHistoryRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("GetTaxHistory", new object[] {
																	  GetTaxHistoryRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyGetTaxHistoryResult EndGetTaxHistory(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyGetTaxHistoryResult)(results[0]));
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/PostTax", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyPostTaxResult PostTax(ProxyPostTaxRequest PostTaxRequest) 
		{
			object[] results = this.Invoke("PostTax", new object[] {
																	   PostTaxRequest});
			return ((ProxyPostTaxResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginPostTax(ProxyPostTaxRequest PostTaxRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("PostTax", new object[] {
																PostTaxRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyPostTaxResult EndPostTax(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyPostTaxResult)(results[0]));
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/CommitTax", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyCommitTaxResult CommitTax(ProxyCommitTaxRequest CommitTaxRequest) 
		{
			object[] results = this.Invoke("CommitTax", new object[] {
																		 CommitTaxRequest});
			return ((ProxyCommitTaxResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginCommitTax(ProxyCommitTaxRequest CommitTaxRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("CommitTax", new object[] {
																  CommitTaxRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyCommitTaxResult EndCommitTax(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyCommitTaxResult)(results[0]));
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/CancelTax", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyCancelTaxResult CancelTax(ProxyCancelTaxRequest CancelTaxRequest) 
		{
			object[] results = this.Invoke("CancelTax", new object[] {
																		 CancelTaxRequest});
			return ((ProxyCancelTaxResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginCancelTax(ProxyCancelTaxRequest CancelTaxRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("CancelTax", new object[] {
																  CancelTaxRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyCancelTaxResult EndCancelTax(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyCancelTaxResult)(results[0]));
		}
		/*
        
				/// <remarks/>
				[System.Web.Services.Protocols.SoapHeaderAttribute("ProfileValue")]
				[SoapDocumentMethod("http://avatax.avalara.com/services/SearchTaxHistory", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
				public ProxySearchTaxHistoryResult SearchTaxHistory(ProxySearchTaxHistoryRequest SearchTaxHistoryRequest) {
					object[] results = this.Invoke("SearchTaxHistory", new object[] {
								SearchTaxHistoryRequest});
					return ((ProxySearchTaxHistoryResult)(results[0]));
				}
        
				/// <remarks/>
				public IAsyncResult BeginSearchTaxHistory(ProxySearchTaxHistoryRequest SearchTaxHistoryRequest, AsyncCallback callback, object asyncState) {
					return this.BeginInvoke("SearchTaxHistory", new object[] {
								SearchTaxHistoryRequest}, callback, asyncState);
				}
        
				/// <remarks/>
				public ProxySearchTaxHistoryResult EndSearchTaxHistory(IAsyncResult asyncResult) {
					object[] results = this.EndInvoke(asyncResult);
					return ((ProxySearchTaxHistoryResult)(results[0]));
				}
		*/
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/ReconcileTaxHistory", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyReconcileTaxHistoryResult ReconcileTaxHistory(ProxyReconcileTaxHistoryRequest ReconcileTaxHistoryRequest) 
		{
			object[] results = this.Invoke("ReconcileTaxHistory", new object[] {
																				   ReconcileTaxHistoryRequest});
			return ((ProxyReconcileTaxHistoryResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginReconcileTaxHistory(ProxyReconcileTaxHistoryRequest ReconcileTaxHistoryRequest, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("ReconcileTaxHistory", new object[] {
																			ReconcileTaxHistoryRequest}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyReconcileTaxHistoryResult EndReconcileTaxHistory(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyReconcileTaxHistoryResult)(results[0]));
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/Ping", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyPingResult Ping(string Message) 
		{
			object[] results = this.Invoke("Ping", new object[] {
																	Message});
			return ((ProxyPingResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginPing(string Message, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("Ping", new object[] {
															 Message}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyPingResult EndPing(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyPingResult)(results[0]));
		}
        
		/// <remarks/>
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/IsAuthorized", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyIsAuthorizedResult IsAuthorized(string Operations) 
		{
			object[] results = this.Invoke("IsAuthorized", new object[] {
																			Operations});
			return ((ProxyIsAuthorizedResult)(results[0]));
		}
        
		/// <remarks/>
		public IAsyncResult BeginIsAuthorized(string Operations, AsyncCallback callback, object asyncState) 
		{
			return this.BeginInvoke("IsAuthorized", new object[] {
																	 Operations}, callback, asyncState);
		}
        
		/// <remarks/>
		public ProxyIsAuthorizedResult EndIsAuthorized(IAsyncResult asyncResult) 
		{
			object[] results = this.EndInvoke(asyncResult);
			return ((ProxyIsAuthorizedResult)(results[0]));
		}

		/// <remarks/>
		//Update Note : Added for 4.16	
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/AdjustTax", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyAdjustTaxResult AdjustTax(ProxyAdjustTaxRequest AdjustTaxRequest) 
		{			
			object[] results = this.Invoke("AdjustTax", new object[]{
			AdjustTaxRequest});
			return ((ProxyAdjustTaxResult)(results[0]));	
		}

		/// <remarks/>
		//Update Note : Added for 5.1	
		[SOAPTraceRequest]
		[SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
		[SoapDocumentMethod("http://avatax.avalara.com/services/ApplyPayment", RequestNamespace="http://avatax.avalara.com/services", ResponseNamespace="http://avatax.avalara.com/services", Use=SoapBindingUse.Literal, ParameterStyle=SoapParameterStyle.Wrapped)]
		public ProxyApplyPaymentResult ApplyPayment(ProxyApplyPaymentRequest ApplyPaymentRequest) 
		{			
			object[] results = this.Invoke("ApplyPayment", new object[]{ApplyPaymentRequest});
			return ((ProxyApplyPaymentResult)(results[0]));	
		}

        /// <remarks/>
        [SOAPTraceRequest]
        [SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
        [SoapDocumentMethod("http://avatax.avalara.com/services/GetParameterBagItems", RequestNamespace = "http://avatax.avalara.com/services", ResponseNamespace = "http://avatax.avalara.com/services", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
        public ProxyGetParameterBagItemsResult GetParameterBagItems(ProxyGetParameterBagItemsRequest GetParameterBagItemsRequest)
        {
            object[] results = this.Invoke("GetParameterBagItems", new object[] {
																		 GetParameterBagItemsRequest});
            return ((ProxyGetParameterBagItemsResult)(results[0]));
        }

        /// <remarks/>
        public IAsyncResult BeginGetParameterBagItems(ProxyGetParameterBagItemsRequest GetParameterBagItemsRequest, AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetParameterBagItems", new object[] {
																  GetParameterBagItemsRequest}, callback, asyncState);
        }

        /// <remarks/>
        public ProxyGetParameterBagItemsResult EndGetParameterBagItems(IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProxyGetParameterBagItemsResult)(results[0]));
        }

        /// <remarks/>
        [SOAPTraceRequest]
        [SoapHeaderAttribute("ProfileValue"), SoapHeaderAttribute("Security")]
        [SoapDocumentMethod("http://avatax.avalara.com/services/GetAllParameterBagItems", RequestNamespace = "http://avatax.avalara.com/services", ResponseNamespace = "http://avatax.avalara.com/services", Use = SoapBindingUse.Literal, ParameterStyle = SoapParameterStyle.Wrapped)]
        public ProxyGetAllParameterBagItemsResult GetAllParameterBagItems()
        {
            object[] results = this.Invoke("GetAllParameterBagItems", new object[] { });
            return ((ProxyGetAllParameterBagItemsResult)(results[0]));
        }

        /// <remarks/>
        public IAsyncResult BeginGetAllParameterBagItems(AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllParameterBagItems", new object[] { }, callback, asyncState);
        }

        /// <remarks/>
        public ProxyGetAllParameterBagItemsResult EndGetAllParameterBagItems(IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((ProxyGetAllParameterBagItemsResult)(results[0]));
        }
	}
        
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetTaxRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="GetTaxRequest")]
	[ComVisible(false)]
	public class ProxyGetTaxRequest : ProxyBaseRequest
	{

        /// <remarks/> just for backward compatibility
        public string OriginCode;
        
        /// <remarks/> just for backward compatibility
        public string DestinationCode;

		/// <remarks/>
		public string CompanyCode;
        
		/// <remarks/>
		public ProxyDocumentType DocType;
        
		/// <remarks/>
		public string DocCode;
        
		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime DocDate;
        
		/// <remarks/>
		public string SalespersonCode;
        
		/// <remarks/>
		public string CustomerCode;
                
		/// <remarks/>
		public string CustomerUsageType;

		/// <remarks/>
		public Decimal Discount;
        
		/// <remarks/>
		public string ExemptionNo;
        
		/// <remarks/>
		public string LocationCode;
        
		/// <remarks/>
		public ProxyBaseAddress[] Addresses;
        
		/// <remarks/>
		public ProxyLine[] Lines;
        
		/// <remarks/>
		public ProxyDetailLevel DetailLevel;

		/// <remarks/>
		public string PurchaseOrderNo;

		/// <remarks/>
		public string ReferenceCode;

		//Update Note : Added for 4.16
		/// <remarks/>
		public bool Commit;

		//Update Note : Added for 5.0 release
		/// <remarks/>
		public ProxyTaxOverride TaxOverride;

        /// <remarks/>
        public string CurrencyCode;

        /// <remarks/>
        public ProxyServiceMode ServiceMode;		

		//Update Note : Added for 5.1
		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime PaymentDate = DateUtil.MinDate;

		//Update Note : Added for 5.2
		/// <remarks/>
		public Decimal ExchangeRate;

		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime ExchangeRateEffDate;

        /// <remarks/>
        public string BusinessIdentificationNo;

        /// <remarks/>
        public string PosLaneCode;

        /// <remarks/>
        public bool IsSellerImporterOfRecord;

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(ProxyBRBuyerTypeEnum.IND)]
        public ProxyBRBuyerTypeEnum BRBuyerType;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExemptOrCannotWH_IRRF;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExemptOrCannotWH_PISRF;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExemptOrCannotWH_COFINSRF;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExemptOrCannotWH_CSLLRF;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExempt_PIS;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExempt_COFINS;//Added for 15.5

        /// <remarks/>
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool BRBuyer_IsExempt_CSLL;//Added for 15.5

        /// <remarks/>
        public string Description;//Added for 15.5

        /// <remarks/>
        public string Email;//Added for 15.5

        /// <remarks/>
        public ProxyParameterBagItem[] ParameterBagItems;

        /// <remarks/>
        public ProxyAddressLocationType[] AddressLocationTypes;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ReconcileTaxHistoryRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="ReconcileTaxHistoryRequest")]
	[ComVisible(false)]
    public class ProxyReconcileTaxHistoryRequest : ProxyBaseRequest
	{
        
		/// <remarks/>
		public string CompanyCode;

		//TODO: verify added manually...to be inline with proxy
		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime StartDate;
		
		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime EndDate;
		
		/// <remarks/>
		public ProxyDocStatus DocStatus;

        /// <remarks/>
        public ProxyDocumentType DocType;
        
		/// <remarks/>
		public string LastDocCode;
        
		/// <remarks/>
		public int PageSize;

	}
    
	/*	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/SearchTaxHistoryRequest/*' />
		[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="SearchTaxHistoryRequest")]
		[ComVisible(false)]
		public class ProxySearchTaxHistoryRequest 
		{
        
			/// <remarks/>
			public string CompanyCode;
        
			/// <remarks/>
			public string Query;
        
			/// <remarks/>
			public string LastDocCode;
		}*/
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/CancelTaxRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="CancelTaxRequest")]
	[ComVisible(false)]
    public class ProxyCancelTaxRequest : ProxyBaseRequest
	{
            
		/// <remarks/>
		public string CompanyCode;
                
		/// <remarks/>
		public ProxyDocumentType DocType;

		/// <remarks/>
		public string DocCode;
        
		/// <remarks/>
		public ProxyCancelCode CancelCode;

        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/CancelCode/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="CancelCode")]
	[ComVisible(false)]
	public enum ProxyCancelCode 
	{
        
		/// <remarks/>
		Unspecified,
        
		/// <remarks/>
		PostFailed,
        
		/// <remarks/>
		DocDeleted,

		/// <remarks/>
		DocVoided,

		//Update Note : Added for 4.16
		/// <remarks/>
		AdjustmentCancelled,

	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/CommitTaxRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="CommitTaxRequest")]
	[ComVisible(false)]
    public class ProxyCommitTaxRequest : ProxyBaseRequest
	{
		/// <remarks/>
		public string CompanyCode;
                
		/// <remarks/>
		public ProxyDocumentType DocType;

		/// <remarks/>
		public string DocCode;

        /// <remarks/>
        public string NewDocCode;

        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/PostTaxRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="PostTaxRequest")]
	[ComVisible(false)]
    public class ProxyPostTaxRequest : ProxyBaseRequest
	{
                
		/// <remarks/>
		public string CompanyCode;
                
		/// <remarks/>
		public ProxyDocumentType DocType;

		/// <remarks/>
		public string DocCode;
        
		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime DocDate;
        
		/// <remarks/>
		public Decimal TotalAmount;
        
		/// <remarks/>
		public Decimal TotalTax;

		/// <remarks/> Updated for 4.17
		public bool Commit;

		/// <remarks/> Updated for HA
		public string NewDocCode;

        /// <remarks/> updated for 14.2
        public string DocId;
        
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetTaxHistoryRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="GetTaxHistoryRequest")]
	[ComVisible(false)]
    public class ProxyGetTaxHistoryRequest : ProxyBaseRequest
	{
		/// <remarks/>
		public string CompanyCode;
                
		/// <remarks/>
		public ProxyDocumentType DocType;

		/// <remarks/>
		public string DocCode;
        
		/// <remarks/>
		public ProxyDetailLevel DetailLevel;

        /// <remarks/>
        public string DocId;
	}

    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/DetailLevel/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="DetailLevel")]
	[ComVisible(false)]
	public enum ProxyDetailLevel 
	{
        
		/// <remarks/>
		Summary,
        
		/// <remarks/>
		Document,
        
		/// <remarks/>
		Line,
        
		/// <remarks/>
		Tax,
        
		/// <remarks/>
		Diagnostic,
	}
    
	/// <remarks/>
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="BoundaryLevel")]
	[ComVisible(false)]
	public enum ProxyBoundaryLevel 
	{
        
		/// <remarks/>
		Address,
        
		/// <remarks/>
		Zip9,
        
		/// <remarks/>
		Zip5,
	}

	/// <remarks/>
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="DocumentType")]
	[ComVisible(false)]
	public enum ProxyDocumentType 
	{
        /// <remarks/>
        Any = -1,

		/// <remarks/>
		SalesOrder,
        
		/// <remarks/>
		SalesInvoice,
        
		/// <remarks/>
		PurchaseOrder,
        
		/// <remarks/>
		PurchaseInvoice,
	        
		/// <remarks/>
		ReturnOrder,
        
		/// <remarks/>
		ReturnInvoice,

        /// <remarks/>
        InventoryTransferOrder,
        
		/// <remarks/>
        InventoryTransferInvoice,
        /// <remarks/>
        ReverseChargeOrder ,
        /// <remarks/>
        ReverseChargeInvoice 
	}

	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxDetail/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="TaxDetail")]
	[ComVisible(false)]
	public class ProxyTaxDetail 
	{
        
		/// <remarks/>
		public ProxyJurisdictionType JurisType;
        
		/// <remarks/>
		public string JurisCode;
        
		/// <remarks/>
		public ProxyTaxType TaxType;
        
		/// <remarks/>
		public Decimal Base;
                
		/// <remarks/>
		public System.Decimal Taxable;

		/// <remarks/>
		public Double Rate;
        
		/// <remarks/>
		public Decimal Tax;
        
		/// <remarks/>
		public System.Decimal NonTaxable;
        
		/// <remarks/>
		public System.Decimal Exemption;

		/// <remarks/>
		public string JurisName;

		/// <remarks/>
		public string TaxName;

		//Update Note : Added for 5.0
		/// <remarks/>
		public string Country;

		/// <remarks/>
		public string Region;

		// <remarks/>
		//public System.Decimal Base;

		/// <remarks/>
		public int TaxAuthorityType;
		
		//Update Note : Added for 5.1
		/// <remarks/>
		public Decimal TaxCalculated;

		//Update Note : Added for 5.3
		/// <remarks/>
		public string TaxGroup;

		/// <remarks/>
		public string RateType;

        /// <remarks/>
        public string StateAssignedNo;

        /// <remarks/>
        public decimal TaxableUnits;

        /// <remarks/>
        public decimal NonTaxableUnits;

        /// <remarks/>
        public decimal ExemptUnits;

        /// <remarks/>
        public string UnitOfBasis;
	}

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxAddress/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "TaxAddress")]
    [ComVisible(false)]
    public class ProxyTaxAddress
    {

        /// <remarks/>
        public string Address;

        /// <remarks/>
        public string AddressCode;

        /// <remarks/>
        public int BoundaryLevel;

        /// <remarks/>
        public string City;

        /// <remarks/>
        public string Country;

        /// <remarks/>
        public string PostalCode;

        /// <remarks/>
        public string Region;

        /// <remarks/>
        public int TaxRegionId;

        /// <remarks/>
        public string JurisCode;

        /// <remarks/>
        public string Latitude;

        /// <remarks/>
        public string Longitude;
        
        /// <remarks/>
        public string GeocodeType;

        /// <remarks/>
        public string ValidateStatus;

        /// <remarks/>
        public int DistanceToBoundary;
    }
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/JurisdictionType/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="JurisdictionType")]
	[ComVisible(false)]
	public enum ProxyJurisdictionType 
	{
		/// <remarks/>
		Country = 0,

		/// <remarks/>
		Composite = 0,
        
		/// <remarks/>
		State = 1,
        
		/// <remarks/>
		County = 2,
        
		/// <remarks/>
		City = 3,
        
		/// <remarks/>
		Special = 4
	}
       
	/// <remarks/>
	[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://avatax.avalara.com/services", TypeName="TaxType")]
	[ComVisible(false)]
	public enum ProxyTaxType 
	{
        /// <remarks/>
        None = 0,

		/// <remarks/>
		Sales = 1,
        
		/// <remarks/>
		Use = 2,
		
		/// <remarks/>
		ConsumerUse = 3,
        
		/// <remarks/>
		Output = 4,
		
		/// <remarks/>
		Input = 5,
        
		/// <remarks/>
		Nonrecoverable = 6,

		/// <remarks/>
		Fee = 7,

		/// <remarks/>
		Rental = 8,

        /// <remarks/>
        Excise = 9,

        /// <remarks/>
        LodgingTax = 10,
        /// <remarks/>
        Hospitality=11,
        /// <remarks/>
        Preservation=12,
        /// <remarks/>
        TransientRoom=13,
        /// <remarks/>
        Hotel=14,
        /// <remarks/>
        CountyAccommodations=15,
        /// <remarks/>
        Accommodations=16,
        /// <remarks/>
        StateAccommodations=17,
        /// <remarks/>
        Tourism=18,
        /// <remarks/>
        ConventionCenter=19

	}
 
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxLine/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="TaxLine")]
	[ComVisible(false)]
	public class ProxyTaxLine 
	{
        
		/// <remarks/>
		public string No;
        
		/// <remarks/>
		public string TaxCode;
        
		/// <remarks/>
		public Decimal Discount;
        
		/// <remarks/>
		public Decimal Taxable;
        
		/// <remarks/>
		public Double Rate;
        
		/// <remarks/>
		public Decimal Tax;
        
		/// <remarks/>
		public ProxyTaxDetail[] TaxDetails;

		/// <remarks/>
		public Decimal Exemption;

		/// <remarks/>
		public bool Taxability;

		/// <remarks/>
		public ProxyBoundaryLevel BoundaryLevel;

		//Update Note : Added for 4.16
		/// <remarks/>
		public int ExemptCertId;

		//Update Note : Added for 5.1
		/// <remarks/>
		public ProxyAccountingMethod AccountingMethod;
		
		/// <remarks/>
		public Decimal TaxCalculated;

        //Update Note : Added for 5.3
        /// <remarks/>
        public bool TaxIncluded;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/CancelTaxResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="CancelTaxResult")]
	[ComVisible(false)]
	public class ProxyCancelTaxResult : ProxyBaseResult 
	{
        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/CommitTaxResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="CommitTaxResult")]
	[ComVisible(false)]
	public class ProxyCommitTaxResult : ProxyBaseResult 
	{
        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ProxySearchTaxHistoryResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="SearchTaxHistoryResult")]
	[XmlInclude(typeof(ProxyReconcileTaxHistoryResult))]
	[ComVisible(false)]
	public class ProxySearchTaxHistoryResult : ProxyBaseResult 
	{
        
		/// <remarks/>
		public ProxyGetTaxResult[] GetTaxResults;
        
        /// <remarks/>
        public string LastDocCode;

	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetTaxResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="GetTaxResult")]
	[ComVisible(false)]
	public class ProxyGetTaxResult : ProxyBaseResult 
	{
                
		/// <remarks/>
		public ProxyDocumentType DocType;
        
        /// <remarks/>
        public string DocCode;
           
		/// <remarks/>
		[XmlElement(DataType="date")]
		public System.DateTime DocDate;

		/// <remarks/>
		public ProxyDocStatus DocStatus;
        
		/// <remarks/>
		public bool Reconciled;
        
		/// <remarks/>
		public DateTime Timestamp;
        
		/// <remarks/>
		public Decimal TotalAmount;
        
		/// <remarks/>
		public Decimal TotalTaxable;
        
		/// <remarks/>
		public Decimal TotalTax;
        
		/// <remarks/>
		public ProxyTaxLine[] TaxLines;

		/// <remarks/>
		public Decimal TotalDiscount;

		/// <remarks/>
		public Decimal TotalExemption;

		//Update Note : Added for 4.16
		/// <remarks/>
		public bool Locked;

		//Update Note : Added for 4.16
		/// <remarks/>
		public int AdjustmentReason;

		//Update Note : Added for 4.16
		/// <remarks/>
		public string AdjustmentDescription;

		//Update Note : Added for 4.16
		/// <remarks/>
		public int Version;

		//Update Note : Added for 4.16
		/// <remarks/>
		[XmlElement(DataType="date")]
		public System.DateTime TaxDate;	

		//Update Note : Added for 5.0
		/// <remarks/>
		public ProxyTaxDetail[] TaxSummary;

		//Update Note : Added for 5.1
		/// <remarks/>
		public Decimal TotalTaxCalculated;

        //update note added for 14.2
        /// <remarks/>
        public string DocId;

        //Update Note : Added for 16.8
        /// <remarks/>
        public string Description;

        //Update Note : Added for 16.8
        /// <remarks/>
        public bool VolatileTaxRates;

        //Update Note : Added for 16.8
        /// <remarks/>
        public ProxyTaxAddress[] TaxAddresses;

	}

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ReconcileTaxHistoryResult/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "ReconcileTaxHistoryResult")]
    [ComVisible(false)]
    public class ProxyReconcileTaxHistoryResult : ProxySearchTaxHistoryResult
    {
        /// <remarks/>
        public int RecordCount;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/DocStatus/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="DocStatus")]
	[ComVisible(false)]
	public enum ProxyDocStatus 
	{
        
		/// <remarks/>
		Temporary,
        
		/// <remarks/>
		Saved,
        
		/// <remarks/>
		Posted,
        
		/// <remarks/>
		Committed,
        
		/// <remarks/>
		Cancelled,

		//Update Note : Added for 4.16		
		/// <remarks/>
		Adjusted,

        //Update Note : Added for 16.8
        /// <remarks/>
        PendingApproval,
        
		/// <remarks/>
		Any = -1
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/PostTaxResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="PostTaxResult")]
	[ComVisible(false)]
	public class ProxyPostTaxResult : ProxyBaseResult 
	{
        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetTaxHistoryResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="GetTaxHistoryResult")]
	[ComVisible(false)]
	public class ProxyGetTaxHistoryResult : ProxyBaseResult 
	{
        
		/// <remarks/>
		public ProxyGetTaxRequest GetTaxRequest;
        
		/// <remarks/>
		public ProxyGetTaxResult GetTaxResult;
	}
    
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/Line/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="Line")]
	[ComVisible(false)]
	public class ProxyLine 
	{

        /// <remarks/> just for backward compatibility
        public string OriginCode;

        /// <remarks/> just for backward compatibility
        public string DestinationCode;
        
		/// <remarks/>
		public string No;
        
		/// <remarks/>
		public string ItemCode;
        
		/// <remarks/>
		public string TaxCode;
        
		/// <remarks/>
		public Double Qty;

        /// <remarks/>
        public string UnitOfMeasurement;
        
		/// <remarks/>
		public Decimal Amount;
        
		/// <remarks/>
		public bool Discounted;
        
		/// <remarks/>
		public string RevAcct;
        
		/// <remarks/>
		public string Ref1;
        
		/// <remarks/>
		public string Ref2;
        
		/// <remarks/>
		public string ExemptionNo;

		///TODO : Added Ammit
		/// <remarks/>
		public string CustomerUsageType;
        
		/// <remarks/>
		public string Description;

		// <remarks/> Added for 4.17 Changed
		//public double Discount;

		//Update Note : Added for 5.0
		/// <remarks/>
		public ProxyTaxOverride TaxOverride;
//		/// <remarks/>
//		public bool IsTaxOverriden;
//		/// <remarks/> 
//		public Decimal TaxOverride;
		
		//Update Note : Added for 5.3
		/// <remarks/>
		public bool TaxIncluded;

        /// <remarks/>
        public string BusinessIdentificationNo;

        /// <remarks/>
        public ProxyParameterBagItem[] ParameterBagItems;

        /// <remarks/>
        public ProxyAddressLocationType[] AddressLocationTypes;
	}	
	
	//Update Note : Added for 4.16	
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/AdjustTaxRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="AdjustTaxRequest")]
	[ComVisible(false)]
	public class ProxyAdjustTaxRequest : ProxyBaseRequest
	{
		/// <remarks/>
		public int AdjustmentReason;
		
		/// <remarks/>
		public string AdjustmentDescription;
		
		/// <remarks/>
		public ProxyGetTaxRequest GetTaxRequest;
	}

	//Update Note : Added for 4.16	
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ProxyAdjustTaxResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="ProxyAdjustTaxResult")]
	[ComVisible(false)]
	public class ProxyAdjustTaxResult : ProxyGetTaxResult 
	{	
//		/// <remarks/>
		//public ProxyGetTaxResult GetTaxResult;
	}

	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxOverride/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="TaxOverride")]
	[ComVisible(false)]
	public class ProxyTaxOverride 
	{
        
		/// <remarks/>
		public ProxyTaxOverrideType TaxOverrideType;                       
        
		/// <remarks/>
		public System.Decimal TaxAmount;

		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime TaxDate = DateUtil.MinDate;

		/// <remarks/>
		public string Reason;

	}
    
	//Update Note : Added for 5.1
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ProxyApplyPaymentRequest/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="ApplyPaymentRequest")]
	[ComVisible(false)]
    public class ProxyApplyPaymentRequest : ProxyBaseRequest
	{
                
		/// <remarks/>
		public string CompanyCode;
                
		/// <remarks/>
		public ProxyDocumentType DocType;

		/// <remarks/>
		public string DocCode;

		/// <remarks/>
		[XmlElement(DataType="date")]
		public DateTime PaymentDate;

        /// <remarks/> updated for 14.2
        public string DocId;
	}
    
	//Update Note : Added for 5.1
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ApplyPaymentResult/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="ApplyPaymentResult")]
	[ComVisible(false)]
	public class ProxyApplyPaymentResult : ProxyBaseResult 
	{
        /// <remarks/> updated for 14.2
        public string DocId;
	}

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/AddressLocationType/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "AddressLocationType")]
    [ComVisible(false)]
    public class ProxyAddressLocationType
    {
        /// <remarks/>
        public string AddressCode;

        /// <remarks/>
        public ProxyLocationType LocationTypeCode;
    }	

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ParameterBagItem/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "ParameterBagItem")]
    [ComVisible(false)]
    public class ProxyParameterBagItem
    {
        /// <remarks/>
        public string Name;

        /// <remarks/>
        public string Value;
    }	

	//Update Note : Added for 5.0	
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/TaxOverrideType/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="TaxOverrideType")]
	[ComVisible(false)]
	public enum ProxyTaxOverrideType 
	{
        
		/// <remarks/>
		None = 0,
        
		/// <remarks/>
		TaxAmount = 1,
        
		/// <remarks/>
		Exemption = 2,

		/// <remarks/>
		TaxDate = 3,
        /// <AccruedTaxAmount/>
        AccruedTaxAmount = 4
	}

	//Update Note : Added for 5.0	
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ServiceMode/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="ServiceMode")]
	[ComVisible(false)]
	public enum ProxyServiceMode
	{
        
		/// <remarks/>
		Automatic=0,

		/// <remarks/>
		Local=1,

		/// <remarks/>
		Remote=2
	}

	//Update Note : Added for 5.1
	/// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/AccountingMethod/*' />
	[XmlType(Namespace="http://avatax.avalara.com/services", TypeName="AccountingMethod")]
	[ComVisible(false)]
	public enum ProxyAccountingMethod
	{
        
		/// <remarks/>
		Accrual=0,

		/// <remarks/>
		Cash=1
	}


    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/BRBuyerTypeEnum/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "BRBuyerTypeEnum")]
    [ComVisible(false)]
    public enum ProxyBRBuyerTypeEnum
    {
        /// <remarks/>
        IND = 0,

        /// <remarks/>
        BUS = 1,

        /// <remarks/>
        GOV = 2
    }

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/LocationType/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "LocationType")]
    [ComVisible(false)]
    public enum ProxyLocationType
    {
        /// <remarks/>
        ShipFrom = 0,

        /// <remarks/>
        ShipTo = 1,

        /// <remarks/>
        PointOfOrderOrigin = 2,

        /// <remarks/>
        PointOfOrderAcceptance = 3
    }

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/ParameterBag/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "ParameterBag")]
    [ComVisible(false)]
    public class ProxyParameterBag
    {
        /// <remarks/>
        public int ParameterBagId;

        /// <remarks/>
        public string Category;

        /// <remarks/>
        public string Country;

        /// <remarks/>
        public string State;

        /// <remarks/>
        public string Name;

        /// <remarks/>
        public string DataType;

        /// <remarks/>
        public string Description;
    }

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetParameterBagItemsRequest/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "GetParameterBagItemsRequest")]
    [ComVisible(false)]
    public class ProxyGetParameterBagItemsRequest : ProxyBaseRequest
    {
        /// <remarks/>
        public string Category;

        /// <remarks/>
        public string Country;

        /// <remarks/> 
        public string State;
    }

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetParameterBagItemsResult/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "GetParameterBagItemsResult")]
    [ComVisible(false)]
    public class ProxyGetParameterBagItemsResult : ProxyBaseResult
    {
        /// <remarks/> 
        public ProxyParameterBag[] ParameterBags;
    }

    /// <include file='TaxSvcProxy.Doc.xml' path='adapter/proxy/GetAllParameterBagItemsResult/*' />
    [XmlType(Namespace = "http://avatax.avalara.com/services", TypeName = "GetAllParameterBagItemsResult")]
    [ComVisible(false)]
    public class ProxyGetAllParameterBagItemsResult : ProxyBaseResult
    {
        /// <remarks/> 
        public ProxyParameterBag[] ParameterBags;
    }
}